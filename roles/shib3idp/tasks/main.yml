# CLEANUPS
- name: Cleanup Shibboleth IdP Install
  file: path=/opt/shibboleth-idp state=absent
  when: cleanup is defined

- name: Cleanup Shibboleth IdP Install source tree
  file: path=/opt/shibboleth-identity-provider-3.3.1 state=absent
  when: cleanup is defined

# END CLEANUPS

- name: Stat Shibboleth IdP tarball in /opt 
  stat: path=/opt/shibboleth-identity-provider-3.3.1.tar.gz
  register: shib_tarball

- name: Download Shibboleth IdP
  get_url: url={{ idp_dl_url }} dest=/opt
  when: shib_tarball.stat.exists == False

- name: Stat Shibboleth IdP source dir in /opt 
  stat: path=/opt/shibboleth-identity-provider-3.3.1
  register: shib_dir_source
  
- name: Unarchive Shibboleth IdP
  unarchive: src=/opt/shibboleth-identity-provider-3.3.1.tar.gz dest=/opt copy=no
  # without copy=no means that src= should be on a localpath. Then file will be uploadade and unarchived 

# Esegui setup di shibboleth e rispondi al prompt di installazione
# http://docs.ansible.com/ansible/expect_module.html

- name: Prepare properties for Shibboleth IdP install
  template: 
    src: roles/shib3idp/templates/shib-install.properties 
    dest: /tmp/shib-install.properties
  #when: pre_t is defined and pre_t > 1 

- name: get JAVA_HOME
  shell: readlink -f /usr/bin/java | sed "s:bin/java::"
  register: java_home

- name: Stat Shibboleth IdP dest dir in /opt
  stat: path=/opt/shibboleth-idp/metadata
  register: shib_dir_dest

- name: Install Shibboleth Idp
  environment: 
    JAVA_HOME: "{{ java_home.stdout }}"
  command: |
    /opt/shibboleth-identity-provider-3.3.1/bin/install.sh \
    -Didp.sealer.password={{ idp_pw }} \
    -Didp.keystore.password={{ idp_pw }} \
    -Didp.scope={{ domain }} \
    -Didp.src.dir=/opt/shibboleth-identity-provider-3.3.1 \
    -Didp.host.name={{ idp_fqdn }} \
    -Didp.target.dir=/opt/shibboleth-idp \
    -Didp.merge.properties=/tmp/shib-install.properties
  when: shib_dir_dest.stat.exists == False 

- name: Copy template configuration for ldap.properties
  template: 
    src: roles/shib3idp/templates/ldap.properties
    dest: "{{ idp_path }}/conf/ldap.properties"

- name: Generate salt for persistentId generator
  shell: openssl rand -base64 36
  register: persId_salt
  when: persId_salt is not defined

- name: Copy template configuration saml-nameid.properties
  copy: 
    src: roles/shib3idp/files/saml-nameid.properties-corso
    dest: "{{ idp_path }}/conf/saml-nameid.properties"
  
- name: Copy template configuration global.xml
  template: 
    src: roles/shib3idp/templates/global.xml
    dest: "{{ idp_path }}/conf/global.xml"

- name: tomcat user for idp dirs
  file: name="{{ item }}" owner="{{ tomcat_version }}" recurse=yes
  with_items:
    - "{{ idp_path }}/conf"
    - "{{ idp_path }}/logs"
    - "{{ idp_path }}/metadata"
    - "{{ idp_path }}/credentials"
  
- name: Install the IdP WAR
  template: 
    src: roles/shib3idp/templates/idp.xml 
    dest: "/etc/{{ tomcat_version }}/Catalina/localhost/idp.xml"
  
- name: Configure LDAP Auth
  template: 
    src: roles/shib3idp/templates/ldap.properties 
    dest: "{{ idp_path }}/conf/ldap.properties" 
    
- name: Configure Enhanced Logging
  copy: 
    src: roles/shib3idp/files/logback.xml 
    dest: "{{ idp_path }}/conf/logback.xml"

- name: Configure saml-nameid.properties (dataStore and persistentId)
  template: 
    src: roles/shib3idp/templates/saml-nameid.properties 
    dest: "{{ idp_path }}/conf/saml-nameid.properties" 

- name: Configure saml-nameid.xml (persistentId)
  copy: 
    src: roles/shib3idp/files/saml-nameid.xml
    dest:  "{{ idp_path }}/conf/saml-nameid.xml"

- name: Configure relying-party.xml (persistentId)
  template:
    src: roles/shib3idp/templates/relying-party.xml
    dest:  "{{ idp_path }}/conf/relying-party.xml"

- name: Configure global.xml (dataStore and persistentId)
  template:
    src: roles/shib3idp/templates/global.xml
    dest:  "{{ idp_path }}/conf/global.xml"

- name: Configure IdP attribute-filter.xml 
  template: 
    src: roles/shib3idp/templates/attribute-filter.xml
    dest: "{{ idp_path }}/conf/attribute-filter.xml"

- name: Copy configured attribute-resolver-full.xml in attribute-resolver.xml
  copy: 
    src: roles/shib3idp/files/attribute-resolver-full.xml
    dest: "{{ idp_path }}/conf/attribute-resolver.xml"

- name: Add attribute-resolver-full.xml to services.xml
  copy: 
    src: roles/shib3idp/files/services.xml
    dest: "{{ idp_path }}/conf/services.xml"

- name: Add metadata providers
  template: 
    src: roles/shib3idp/templates/metadata-providers.xml-1
    dest: "{{ idp_path }}/conf/metadata-providers.xml"

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '<IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol urn:oasis:names:tc:SAML:1.1:protocol urn:mace:shibboleth:1.0">'
    replace: '<IDPSSODescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">'
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '<ArtifactResolutionService Binding="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding" Location="https://{{ idp_fqdn }}:8443/idp/profile/SAML1/SOAP/ArtifactResolution" index="1"/>'
    replace: ''
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '/idp/profile/SAML2/SOAP/ArtifactResolution" index="2"'
    replace: '/idp/profile/SAML2/SOAP/ArtifactResolution" index="1"'
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '<AttributeAuthorityDescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:1.1:protocol">'
    replace: '<AttributeAuthorityDescriptor protocolSupportEnumeration="urn:oasis:names:tc:SAML:2.0:protocol">'
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '<AttributeService Binding="urn:oasis:names:tc:SAML:1.0:bindings:SOAP-binding" Location="https://{{ idp_fqdn }}:8443/idp/profile/SAML1/SOAP/AttributeQuery"/>'
    replace: ''
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: '<!-- <AttributeService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://{{ idp_fqdn }}:8443/idp/profile/SAML2/SOAP/AttributeQuery"/> -->'
    replace: '<AttributeService Binding="urn:oasis:names:tc:SAML:2.0:bindings:SOAP" Location="https://{{ idp_fqdn }}:8443/idp/profile/SAML2/SOAP/AttributeQuery"/>'
    backup: yes

# Malavolti docet
- replace:
    path: "{{ idp_path }}/metadata/idp-metadata.xml"
    regexp: ':8443'
    replace: ''
    backup: yes


- name: Restart Tomcat
  service: name="{{ tomcat_version }}" state=restarted

